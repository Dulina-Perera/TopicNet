"""modify 'document', 'node' and 'sentence' models to support asynchronous database operations

Revision ID: 4b3529eb766d
Revises: 
Create Date: 2024-10-16 11:20:26.839943

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4b3529eb766d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('path')
    )
    op.create_index('ix_document_path', 'document', ['path'], unique=False)
    op.create_table('node',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('topic_and_content', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id', 'document_id'], ['node.id', 'node.document_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'document_id')
    )
    op.create_index('ix_node_document_id_parent_id', 'node', ['document_id', 'parent_id'], unique=False)
    op.create_table('sentence',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('embeddings', postgresql.ARRAY(sa.Float()), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['node_id', 'document_id'], ['node.id', 'node.document_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', 'document_id')
    )
    op.create_index('ix_sentence_document_id_node_id', 'sentence', ['document_id', 'node_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_sentence_document_id_node_id', table_name='sentence')
    op.drop_table('sentence')
    op.drop_index('ix_node_document_id_parent_id', table_name='node')
    op.drop_table('node')
    op.drop_index('ix_document_path', table_name='document')
    op.drop_table('document')
    # ### end Alembic commands ###
